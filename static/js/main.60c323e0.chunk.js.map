{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item/index.js","components/add-item/add-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","placeholder","onChange","this","Component","TodoListItem","_this$props","label","onToggleImportant","onToggleDone","classNames","important","onClick","type","onDeleted","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","status","onStatusChange","AddItem","onLabelChange","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","concat","toConsumableArray","slice","text","newItem","_ref2","toggleProperty","arr","propName","oldItem","objectSpread","defineProperty","_ref3","_ref4","search","items","length","filter","toLowerCase","indexOf","statusChange","_this$state","visibleItems","doneCount","todoCount","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_add_item","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.60c323e0.chunk.js","sourcesContent":["import AppHeader from './app-header'\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Мой список дел</h1>\r\n\t  <h2>{toDo} нужно сделать, {done} уже завершены</h2>\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\tstate = {\r\n\t\tterm: ''\r\n\t};\r\n\t\r\n\tonSearchChange = (e) => {\r\n\t\tconst term = e.target.value;\r\n\t\tthis.setState({ term });\r\n\r\n\t\tthis.props.onSearchChange(term);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (<input\r\n\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\tplaceholder='что искать?'\r\n\t\t\t\t\tonChange={ this.onSearchChange }\r\n\t\t\t\t\tvalue={ this.state.term }\r\n\t\t\t\t\t/>);\r\n\t}\r\n}\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\trender() {\r\n\tconst { label, onToggleImportant, onToggleDone, done, important } = this.props;\r\n\tlet classNames = 'todo-list-item';\r\n\tif (done) {\r\n\t\tclassNames += ' done';\r\n\t}\r\n\tif (important) { \r\n\t\tclassNames += ' important';\r\n\t}\r\n\treturn (\r\n\t\t<span className={ classNames } >\r\n\t\t\t<span \r\n\t\t\t\tclassName=\"todo-list-item-label\"\r\n\t\t\t  \tonClick={ onToggleDone}>\r\n\t\t\t\t\t{ label }\r\n\t\t\t</span>\r\n\t\t\t<button type=\"button\"\r\n\t\t            className=\"btn btn-outline-success btn-sm float-right\"\r\n\t\t            onClick={ onToggleImportant }>\r\n\t\t    \t<i className=\"fa fa-exclamation\" />\r\n\t\t    </button>\r\n\t\t    <button type=\"button\"\r\n\t\t            className=\"btn btn-outline-danger btn-sm float-right\"\r\n\t\t            onClick={ this.props.onDeleted }>\r\n\t\t    \t<i className=\"fa fa-trash-o\" />\r\n\t\t    </button>\r\n\t\t</span>);\r\n\t}\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, \r\n                    onToggleDone, \r\n                    onToggleImportant }) => {\r\n\r\n\tconst elements = todos.map((item) => {\r\n\t\t\r\n\t\tconst { id, ...itemProps } = item;\r\n\r\n\t\treturn (\r\n\t\t\t<li key={ id } className=\"list-group-item\">\r\n            \t<TodoListItem \r\n                    { ...itemProps } \r\n                    onDeleted={ () => onDeleted(id)}\r\n                    onToggleImportant={ () => onToggleImportant(id)}\r\n                    onToggleDone={ () => onToggleDone(id)}\r\n                    />\r\n            </li>\r\n        );\r\n\t});\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>);\r\n}\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n        buttons = [\r\n                {name: 'All'},\r\n                {name: 'Active'},\r\n                {name: 'Done'}\r\n        ];\r\n\r\n        render() { \r\n\r\n                const { status, onStatusChange } = this.props;\r\n\r\n                const buttons = this.buttons.map(({ name }) => {\r\n                        const isActive = status === name;\r\n\r\n                        const className = isActive ? \"btn btn-info\" : \"btn btn-outline-secondary\";\r\n\r\n                        return (<button type=\"button\"\r\n                                        className={ className }\r\n                                        key={ name }\r\n                                        onClick={ () => onStatusChange(name) }>{ name }</button>\r\n                        );\r\n                });\r\n                \r\n                return (\r\n                        <div className=\"btn-group item-status-filter\">\r\n                                { buttons }\r\n                        </div>\r\n                        ); \r\n        }\r\n}\r\n","import AddItem from './add-item';\r\n\r\nexport default AddItem;","import React, { Component } from 'react';\r\n\r\nimport './add-item.css'\r\n\r\nexport default class AddItem extends Component  {\r\n\t\r\n\tstate = {\r\n\t\tlabel: ''\r\n\t};\r\n\r\n\tonLabelChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tlabel: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.addItem(this.state.label);\t\r\n\t\tthis.setState({\r\n\t\t\tlabel: ''\r\n\t\t});\r\n\t};\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<form \r\n\t\t\t\tclassName=\"add-item d-flex\"\r\n\t\t\t\tonSubmit={ this.onSubmit }>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tonChange={ this.onLabelChange }\r\n\t\t\t\t\tplaceholder=\"Что нужно сделать?\" \r\n\t\t\t\t\tvalue={ this.state.label }\r\n\t\t\t\t\t/>\r\n\t\t\t\t<button className=\"btn btn-outline-secondary\">\r\n\t\t\t\t\t\tДобавить\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header/';\r\nimport SearchPanel from '../search-panel/';\r\nimport TodoList from '../todo-list/';\r\nimport ItemStatusFilter from '../item-status-filter/';\r\nimport AddItem from '../add-item/';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    \r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData : [\r\n            this.createTodoItem(\"Выпить кофе\"),\r\n            this.createTodoItem(\"Сделать todo список\"),\r\n            this.createTodoItem(\"Выпить еще кофе\"),\r\n        ],\r\n        term : '',\r\n        status: 'All'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label, \r\n            important: false, \r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newData = [ \r\n                ...todoData.slice(0, idx), \r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newData\r\n            };\r\n        })\r\n    };\r\n\r\n    addItem = (text) => {\r\n        \r\n        const newItem = {\r\n                label: text, \r\n                important: false, \r\n                done: false,\r\n                id: this.maxId++\r\n            };\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newData = [\r\n                ...todoData, \r\n                newItem\r\n            ];\r\n\r\n            return {\r\n                todoData: newData\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleProperty = (arr, id, propName) => {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n        const oldItem = arr[idx];\r\n        const newItem = { ...oldItem,  [propName]: !oldItem[propName]};\r\n        \r\n        return [ \r\n            ...arr.slice(0, idx), \r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    }\r\n\r\n    search = (items, term) => {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label\r\n                .toLowerCase()\r\n                .indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    } \r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    }\r\n\r\n    statusChange = (items, status) => {\r\n        switch (status){\r\n            case 'Active':  \r\n                    return items.filter((item) => {\r\n                        return !item.done;\r\n                    });\r\n\r\n            case 'Done':\r\n                    return items.filter((item) => {\r\n                        return item.done    ;\r\n                    });\r\n\r\n            default: return items;\r\n        }\r\n    }\r\n\r\n    onStatusChange = (status) => {\r\n        this.setState({ status });\r\n    }\r\n\r\n    render() {\r\n        const { todoData, term, status } = this.state;\r\n\r\n        const visibleItems = this.statusChange(this.search(todoData, term), status);\r\n\r\n        const doneCount = todoData\r\n                            .filter((el)=>el.done).length;\r\n        const todoCount = todoData.length-doneCount;\r\n\r\n        return (\r\n            <div className='todo-app'>\r\n                <AppHeader toDo={ todoCount } done={ doneCount } />\r\n                <div className='top-panel d-flex'>\r\n                    <SearchPanel \r\n                        onSearchChange={ this.onSearchChange }\r\n                    />\r\n                    <ItemStatusFilter \r\n                        onStatusChange={ this.onStatusChange }\r\n                        status= { status }\r\n                    />\r\n                </div>\r\n                <TodoList \r\n                    todos={ visibleItems }\r\n                    onDeleted={ this.deleteItem }\r\n                    onToggleImportant={ this.onToggleImportant }\r\n                    onToggleDone= { this.onToggleDone }\r\n                    />\r\n                <AddItem \r\n                    addItem={ this.addItem }/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app/';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}